version: '3.8'

services:
  rtsp-simple-server:
    container_name: RTSP-Simple-Server
    image: aler9/rtsp-simple-server
    ports:
      - 8554:8554
      - 1935:1935
      - 8888:8888
    volumes:
      - ./RTSP-Simple-Server/rtsp-simple-server.yml:/rtsp-simple-server.yml

  nginx:
    container_name: Nginx
    build:
      context: Nginx
      dockerfile: Dockerfile
    ports:
      - 80:8000

  redis:
    container_name: Redis
    image: redis:latest
    ports:
      - 6379:6379

  sqlserver:
    container_name: MsSqlServer
    image: "mcr.microsoft.com/mssql/server:2019-latest"
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "pa$$w0rd!"
    ports:
      - 1433:1433

  mysql:
    container_name: MySQL
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: my-secret-pw
    ports:
      - 3306:3306

  postgresdb:
    image: postgres
    container_name: PostgresDb
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin1234
      - POSTGRES_DB=DefaultDb
    restart: always
    networks:
      - postgres
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  postgis:
    image: postgis/postgis
    container_name: PostGIS
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin1234
      - POSTGRES_DB=DefaultGISDb
    restart: always
    networks:
      - postgres
    ports:
      - 5432:5432
    volumes:
      - postgis_data:/var/lib/postgresql/data/

  pgadmin4:
    image: dpage/pgadmin4
    container_name: pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=admin1234
    restart: always
    ports:
      - 5050:80
    networks:
      - postgres
    volumes:
      - pgadmin_data:/root/.pgadmin

  mongo:
    container_name: MongoDb
    image: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/data/db

  influxdb:
    image: influxdb:1.8.10
    networks:
      # - k6
      - grafana
    ports:
      - 8086:8086
    environment:
      - INFLUXDB_DB=k6
    volumes:
      - influxdb:/var/lib/influxdb

  rabbitmq:
    container_name: RabbitMQ
    image: rabbitmq:management
    hostname: "rabbit1"
    ports:
      - 15672:15672
      - 5672:5672
    labels:
      NAME: "some-rabbit"

  portainer:
    container_name: Portainer
    image: portainer/portainer-ce
    ports:
      - 9443:9443
      - 8000:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  seq:
    container_name: Seq
    image: datalust/seq:latest
    restart: unless-stopped
    environment:
      - ACCEPT_EULA=Y
    ports:
      - 8800:80
      - 5341:5341
    volumes:
      - /path/to/seq/data:/data

  elasticsearch:
    container_name: ElasticSearch-v7
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.5
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ports:
      - 9200:9200
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data 

  kibana:
    container_name: Kibana-v7
    image: docker.elastic.co/kibana/kibana:7.17.5
    environment:        
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601

  apmserver:
    container_name: APM-Server-v7
    image: docker.elastic.co/apm/apm-server:7.17.5
    cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
    cap_drop: ["ALL"]
    ports:
      - 8200:8200
    depends_on:
      - elasticsearch
    command: >
      apm-server -e
        -E apm-server.rum.enabled=true
        -E setup.kibana.host=kibana:5601
        -E setup.template.settings.index.number_of_replicas=0
        -E apm-server.kibana.enabled=true
        -E apm-server.kibana.host=kibana:5601
        -E output.elasticsearch.hosts=["elasticsearch:9200"]

  grafana:
    image: grafana/grafana:latest
    networks:
      - grafana
    ports:
      - 3000:3000
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    volumes:
      - ./Grafana:/var/lib/grafana/dashboards
      - ./Grafana/grafana-dashboard.yaml:/etc/grafana/provisioning/dashboards/dashboard.yaml
      - ./Grafana/grafana-datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml

  consul:
    image: consul
    container_name: Consul
    ports:
      - 8500:8500
      - 8600:8600/udp
    command: >
      agent -dev -server -ui -node=server-1 -bootstrap-expect=1
        -client="0.0.0.0"

volumes:
  mongo_data:
  portainer_data:
  postgres_data:
  postgis_data:
  pgadmin_data:
  elasticsearch-data:
  influxdb:

networks:
  # k6:
  grafana:
  postgres: